"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все цифры извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321
Не забудьте проверить и на числах, заканчивающихся нулем.
Пример:
Введите число, которое требуется перевернуть: 1230
Перевернутое число: 0321
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


# это вроде рекурсия и я понимаю, как она работает
def converter_1(num, result=''):
    # берем пустую строку и приклеиваем к ней последнюю цифру числа
    result += str(num % 10)

    # если в числе больше одного символа,
    # отдаем функции все его цифры кроме последней и запускаем её
    if num > 9:
        num = num // 10
        return converter_1(num, result)

    # иначе если число однозначное, просто отдаем получившуюся строку
    return result


# та же самая функция, тоже рекурсия, но я не понимаю как она работает.. магия какая-то
# (вообще большая удача что я смогла это написать. ориентировалась на листинг 2 из конспекта)
def converter_2(num):
    if num < 10:
        return str(num % 10)
    else:
        return str(num % 10) + converter_2(num // 10)


# обе функции работают исправно и 0 тоже учитывают
print(converter_1(1240))
print(converter_2(1340))







