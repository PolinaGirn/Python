"""
Задание 1.
Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива
Сделайте замеры времени выполнения кода с помощью модуля timeit
Оптимизируйте, чтобы снизить время выполнения
Проведите повторные замеры.
Добавьте аналитику: что вы сделали и почему!!!
Без аналитики задание не принимается
И прошу вас обратить внимание, что то, что часто ошибочно называют генераторами списков,
на самом деле к генераторам отношения не имеет. Это называется "списковое включение" - list comprehension.
"""
from timeit import timeit
from random import randint


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


# оптимизированная функция. сделала через списковое включение.
# она работает быстрее, потому что ей не надо использовать аппенд (наверное)
# она просто проходит по списку и берет всё, что ей подходит.
# помимо более быстрой работы, функция занимает намного меньше места
def func_2(nums):
    return [i for i in range(len(nums)) if nums[i] % 2 == 0]


arr = [randint(0, 100) for i in range(1000)]

print(timeit('func_1(arr)', globals=globals(), number=10000))   # 0.9170441
print(timeit('func_2(arr)', globals=globals(), number=10000))   # 0.6803805
